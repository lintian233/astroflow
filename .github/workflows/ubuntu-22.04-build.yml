# # This starter workflow is for a CMake project running on a single platform. There is a different starter workflow if you need cross-platform coverage.
# # See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-multi-platform.yml
# name: CMake on a single platform

# on:
#   push:
#     branches: [ "main"]
#   pull_request:
#     branches: [ "main" ] 
# jobs:
#   build:
#     runs-on: ubuntu-22.04
#     strategy:
#       matrix:
#         cuda: ["12.8.1"]
#     container: nvidia/cuda:${{ matrix.cuda }}-devel-ubuntu22.04

#     steps:
#     - name: Checkout code
#       uses: actions/checkout@v4

#     # 系统依赖安装
#     - name: Add GCC repository
#       run: |
#         apt-get update
#         apt-get install -y software-properties-common
#         add-apt-repository -y ppa:ubuntu-toolchain-r/test
#         apt-get install -y cmake make
#         nvcc --version

#     - name: Setup Miniconda
#       uses: conda-incubator/setup-miniconda@v3
#       with:
#         miniconda-version: "latest"
#         auto-update-conda: true
#         python-version: "3.12"
#         activate-environment: devastroflow
#         auto-activate-base: false

#     - name: install dependencies
#       shell: bash --login {0}
#       run: |
#         source $CONDA/etc/profile.d/conda.sh
#         conda activate devastroflow
#         pip install numpy conan

#     - name: Conan profile setup
#       shell: bash --login {0}
#       run: |
#         source $CONDA/etc/profile.d/conda.sh
#         conda activate devastroflow
#         mkdir -p ~/.conan2/profiles
#         conan profile detect --force

#     # 构建步骤
#     - name: Create build directory
#       run: mkdir -p build

#     - name: CMake configure
#       shell: bash --login {0}
#       working-directory: ./build
#       run: |
#         source $CONDA/etc/profile.d/conda.sh
#         conda activate devastroflow
#         conan install .. --output-folder=. --build=missing
#         source conanbuild.sh
#         cmake .. \
#           -DCMAKE_BUILD_TYPE=Release

#     - name: Build project
#       working-directory: ./build
#       run: make -j$(nproc)

#     - name: Run tests
#       working-directory: ./build
#       run: ctest -E "Cuda"
